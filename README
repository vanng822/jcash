GOAL
This project is mostly for adapting solutions out there for my personal use.

EXAMPLE

/* require necessary */

/**
 * 
 * configuration rules
  {
 		files: {
 			block1 : [filename1, filename2, ...],
 			...
 		},
 		urls : {
 			block1 : [url1, url2,...],
 			...
 		},
 		locationMap : {
 			location1 : [block1, block2,...]
 		}
  }
 */

var config = {
	js : {
		files : {
			'igeonote' : ['vnf/namespace.js', 'vnf/language.js',
						'vnf/util/gplusone.js', 'vnf/util/fbshare.js', 
						'vnf/util/geolocation.js', 'vnf/util/loading.js', 
						'vnf/util/gatracking.js', 'jquery/jhistory.js', 'igeonote.js']
		},
		urls : {
			'jQuery' : ['http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js'],
			'googleMap' : ['http://maps.google.com/maps/api/js?sensor=false']
		},
		locationMap : {
			'/' : ['jQuery', 'igeonote', 'googleMap'],
			'/note' : ['jQuery', 'igeonote', 'googleMap'],
			'/city/map' : ['jQuery', 'igeonote', 'googleMap']
		}
	},
	css : {
		files : {
			'igeonote' : ['igeonote.css'],
			'mobile' : ['igeonote-phone.css']
		},
		urls : {
			
		},
		locationMap : {
			'*' : ['igeonote']
		}
	}
};


var app = express.createServer();
var jsManager = staticHandler.getJsManager();
var cssManager = staticHandler.getCssManager();

/* parsing the configuration */
jsManager.parseConfig(staticConfig.js);
cssManager.parseConfig(staticConfig.css);

staticHandler.boostrap(app);

jsManager.preRenderAll();
cssManager.preRenderAll();

/* ejs templates; content template */
<% addBottomScript('some javascript including script-tag here') %>

/* layout template with automatic location mapping */
<html>
	<head>
	<%- renderStyleTags() %>
	</head>
	<body>
	<%- renderScriptTags() %>
	<%- renderBottomScripts() %>
	</body>
</html>
	